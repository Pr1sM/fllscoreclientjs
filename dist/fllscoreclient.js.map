{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap ef9d47a2e8fad8b27f95","webpack:///./src/interface.ts","webpack:///./src/index.ts","webpack:///./src/createClient.ts","webpack:///./src/clientImpl.ts","webpack:///external \"net\"","webpack:///./src/contants.ts","webpack:///external \"timers\""],"names":[],"mappings":"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","file":"fllscoreclient.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"fllscoreclient\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"fllscoreclient\"] = factory();\n\telse\n\t\troot[\"fllscoreclient\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ef9d47a2e8fad8b27f95","import {Socket} from \"net\";\n\nexport namespace FLLScoreClient {\n\n    export enum ConnectionStatus {\n        Disconnected,\n        Connecting,\n        Connected\n    }\n\n    export interface TeamInfo {\n        number: number;\n        name: string;\n        scores: number[];\n        highScore: number;\n    }\n\n    export interface ScheduleInfo {\n        lastUpdate: Date;\n        numberOfTeams: number;\n        numberOfMatches: number;\n        numberOfCompletedMatches: number;\n    }\n\n    export interface ScoreInfo {\n        scheduleInfo: ScheduleInfo,\n        teamInfo: TeamInfo[]\n    }\n\n    export interface Client {\n\n        connect(): Promise<String>;\n\n        sendPing(): Promise<String>;\n\n        sendLastUpdate(): Promise<Date>;\n\n        sendScore(): Promise<ScoreInfo>;\n\n        close(): Promise<String>;\n\n        host: string;\n        name: string;\n        port: number;\n        lastUpdate?: Date;\n        scoreInfo?: ScoreInfo;\n        status: ConnectionStatus;\n        socket: Socket;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/interface.ts","export { FLLScoreClient } from \"./interface\";\nexport { createClient } from \"./createClient\";\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","import {ClientImpl} from \"./clientImpl\";\nimport {FLLScoreClient} from \"./interface\";\n\nexport function createClient(host?: string, port?: number, name?: string) : FLLScoreClient.Client {\n    return new ClientImpl(host, port, name);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/createClient.ts","import {Socket} from \"net\";\nimport {FLLScoreClientConstants} from \"./contants\";\nimport {FLLScoreClient} from \"./interface\";\nimport Timer = NodeJS.Timer;\nimport {clearInterval} from \"timers\";\n\nexport class ClientImpl implements FLLScoreClient.Client {\n\n    host: string = 'localhost';\n    port: number = 25002;\n    name: string = 'FLLScoreClient';\n    lastUpdate?: Date;\n    scoreInfo?: FLLScoreClient.ScoreInfo;\n    status: FLLScoreClient.ConnectionStatus;\n    socket: Socket;\n\n    private useWatchdog:boolean;\n    private watchdogInterval:number;\n    private connTest?:Timer;\n\n    constructor(host: string = 'localhost', port: number = 25002, name: string = 'FLLScoreClient', useWatchdog: boolean = true) {\n        this.host = host;\n        this.port = port;\n        this.name = name;\n        this.lastUpdate = undefined;\n        this.scoreInfo = undefined;\n        this.status = FLLScoreClient.ConnectionStatus.Disconnected;\n        this.socket = new Socket();\n        this.useWatchdog = useWatchdog;\n        this.connTest = undefined;\n        this.watchdogInterval = 5;\n\n        this.socket.on('close', () => {\n            this.status = FLLScoreClient.ConnectionStatus.Disconnected;\n            if(this.connTest !== undefined) {\n                clearInterval(this.connTest);\n            }\n            this.connTest = undefined;\n            this.watchdogInterval = 5;\n        });\n    }\n\n    public connect(): Promise<String> {\n        return new Promise<String>((resolve, reject) => {\n            this.status = FLLScoreClient.ConnectionStatus.Connecting;\n\n            this.socket.once('error', err => {\n                this.status = FLLScoreClient.ConnectionStatus.Disconnected;\n                reject(err);\n            });\n\n            this.socket.once('data', data =>  {\n                if(FLLScoreClientConstants.WELCOME.test(data.toString())) {\n                    let raw = data.toString().trim();\n                    this.watchdogInterval = parseInt(raw.substring(raw.indexOf(':')+1));\n                    this.resetConnectionTest();\n                    resolve('Connected');\n                } else {\n                    this.status = FLLScoreClient.ConnectionStatus.Disconnected;\n                    reject(new Error('Unexpected Message returned: ' + data));\n                }\n            });\n\n            this.socket.connect({\n                port: this.port,\n                host: this.host\n            }, () => {\n                this.status = FLLScoreClient.ConnectionStatus.Connected;\n                this.socket.write('FLLScore:' + this.name + '|Primary\\r\\n');\n            });\n        });\n    }\n\n    public sendPing(): Promise<String> {\n        return new Promise<String>((resolve, reject) => {\n            if(this.status !== FLLScoreClient.ConnectionStatus.Connected) {\n                reject(new Error('Not Connected'))\n            }\n\n            this.socket.once('error', err => {\n                reject(err);\n            });\n\n            this.socket.once('data', data => {\n                if(FLLScoreClientConstants.ECHO.test(data.toString())) {\n                    resolve('Echo Received');\n                } else {\n                    reject(new Error('Unexpected Message returned: ' + data));\n                }\n            });\n\n            this.socket.write('Ping:\\r\\n', () => {\n                this.resetConnectionTest();\n            });\n        });\n    }\n\n    public sendLastUpdate(): Promise<Date> {\n        return new Promise<Date>((resolve, reject) => {\n            if(this.status !== FLLScoreClient.ConnectionStatus.Connected) {\n                reject(new Error('Not Connected'));\n            }\n\n            this.socket.once('error', err => {\n                reject(err);\n            });\n\n            this.socket.once('data', data => {\n                if(FLLScoreClientConstants.LAST_UPDATE.test(data.toString())) {\n                    let raw = data.toString().trim();\n                    let response = raw.substring(raw.indexOf(':')+1);\n                    this.lastUpdate = new Date(response);\n                    resolve(this.lastUpdate);\n                } else {\n                    reject(new Error('Unexpected Message returned: ' + data));\n                }\n            });\n\n            this.socket.write('Send Last Update:\\r\\n', () => {\n                this.resetConnectionTest();\n            });\n        });\n    }\n\n    public sendScore(): Promise<FLLScoreClient.ScoreInfo> {\n        return new Promise<FLLScoreClient.ScoreInfo>((resolve, reject) => {\n\n            let intermediateData = '';\n            let teamInfo:FLLScoreClient.TeamInfo[] = [];\n            let scheduleInfo:FLLScoreClient.ScheduleInfo;\n            let sendScoreDataHandler = (data:Buffer|String) => {\n                let raw = data.toString();\n\n                if(!raw.endsWith('\\r\\n')) {\n                    intermediateData += raw;\n                    return;\n                } else {\n                    raw = intermediateData + raw;\n                    intermediateData = '';\n                }\n\n                let split = raw.trim().split('\\r\\n');\n\n                split.forEach(value => {\n                    if(FLLScoreClientConstants.SCORE_DONE.test(value)) {\n                        this.socket.removeListener('data', sendScoreDataHandler);\n                        this.scoreInfo = {\n                            scheduleInfo: scheduleInfo,\n                            teamInfo: teamInfo\n                        };\n                        resolve(this.scoreInfo);\n                    } else if(FLLScoreClientConstants.SCORE_HEADER.test(value)) {\n                        let content = value.substring(value.indexOf(':') + 1).split('|');\n                        scheduleInfo = {\n                            lastUpdate: new Date(content[0]),\n                            numberOfTeams: parseInt(content[1]),\n                            numberOfMatches: parseInt(content[2]),\n                            numberOfCompletedMatches: parseInt(content[3])\n                        };\n                    } else if(FLLScoreClientConstants.SCORE.test(value)) {\n                        let content = value.substring(value.indexOf(':') + 1).split('|');\n                        teamInfo.push({\n                            number: parseInt(content[0]),\n                            name: content[1],\n                            highScore: parseInt(content[2]),\n                            scores: [parseInt(content[3]), parseInt(content[4]), parseInt(content[5])]\n                        });\n                    } else {\n                        // TODO: Deal with invalid command\n                    }\n                });\n            };\n\n            if(this.status !== FLLScoreClient.ConnectionStatus.Connected) {\n                reject(new Error('Not Connected'));\n            }\n\n            this.socket.once('error', err => {\n                reject(err);\n            });\n\n            this.socket.on('data', sendScoreDataHandler);\n\n            this.socket.write('Send Score:\\r\\n', () => {\n                this.resetConnectionTest();\n            });\n        });\n    }\n\n    public close(): Promise<String> {\n        return new Promise<String>((resolve, reject) => {\n            if(this.status !== FLLScoreClient.ConnectionStatus.Connected) {\n                reject(new Error('Not Connected'));\n            }\n\n            this.socket.once('error', err => {\n                reject(err);\n            });\n\n            this.socket.once('close', had_error => {\n                if(had_error) {\n                    reject(new Error('Closed with error'));\n                } else {\n                    resolve('Connection Closed')\n                }\n            });\n\n            this.socket.end();\n        });\n    }\n\n    private resetConnectionTest(): void {\n        if(this.connTest !== undefined) {\n            clearInterval(this.connTest);\n        }\n\n        if(!this.useWatchdog) {\n            return;\n        }\n\n        this.connTest = setInterval(() => {\n            if(this.status === FLLScoreClient.ConnectionStatus.Connected) {\n                this.socket.write('Ping:\\r\\n');\n            }\n        }, this.watchdogInterval * 1000);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/clientImpl.ts","module.exports = require(\"net\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"net\"\n// module id = 5\n// module chunks = 0","\nexport namespace FLLScoreClientConstants {\n    export const WELCOME = /^Welcome:[0-9]+(\\r\\n)*$/;\n    export const ECHO = /^Echo:(\\r\\n)*$/;\n    export const SCORE_HEADER = /^Score Header:[a-zA-Z0-9\\/: ]+(\\|[0-9]+){3}(\\r\\n)*$/;\n    export const SCORE = /^Score:[0-9]+\\|.+(\\|(-1|[0-9]+)){4}(\\r\\n)*$/;\n    export const SCORE_DONE = /^Score Done:(\\r\\n)*$/;\n    export const LAST_UPDATE = /^Last Update:.+(\\r\\n)*$/;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/contants.ts","module.exports = require(\"timers\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"timers\"\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}