{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap bdb3b104180c5d574626","webpack:///./src/proxy/index.ts","webpack:///./src/proxy/client.ts","webpack:///external \"net\"","webpack:///./src/constants/index.ts","webpack:///./src/constants/connectionStatus.ts","webpack:///./src/constants/regexConstants.ts","webpack:///./src/proxy/webProxy.ts","webpack:///external \"socket.io\""],"names":[],"mappings":"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","file":"fllscoreclientproxy.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"fllscoreclientproxy\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"fllscoreclientproxy\"] = factory();\n\telse\n\t\troot[\"fllscoreclientproxy\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bdb3b104180c5d574626","import {FLLScoreClient} from '../shared/interface';\nimport {Client} from './client';\nimport {WebProxy} from './webProxy';\n\nfunction createClient(opts?: FLLScoreClient.IClientOpts): FLLScoreClient.IClient {\n    return new Client(opts);\n}\n\nfunction createWebProxy(opts?: FLLScoreClient.IWebProxyOpts): FLLScoreClient.IWebProxy {\n    return new WebProxy(opts);\n}\n\nexport { FLLScoreClient, createClient, createWebProxy };\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/proxy/index.ts","import {Socket} from 'net';\nimport * as FLLScoreClientConstants from '../constants';\nimport {FLLScoreClient} from '../shared/interface';\nimport Timer = NodeJS.Timer;\n\ntype DataCallback = (str: string) => void;\n\nexport class Client implements FLLScoreClient.IClient {\n    private static defaults(src: FLLScoreClient.IClientOpts,\n                            def: FLLScoreClient.IClientOpts): FLLScoreClient.IClientOpts {\n        const val = def;\n        if (src.host !== undefined) {\n            val.host = src.host;\n        }\n        if (src.name !== undefined) {\n            val.name = src.name;\n        }\n        if (src.port !== undefined) {\n            val.port = src.port;\n        }\n        if (src.useWatchdog !== undefined) {\n            val.useWatchdog = src.useWatchdog;\n        }\n\n        return val;\n    }\n\n    public lastUpdate?: Date;\n    public opts: FLLScoreClient.IClientOpts = {\n        host: 'localhost',\n        name: 'FLLScoreClient',\n        port: 25002,\n        useWatchdog: true,\n    };\n    public scoreInfo?: FLLScoreClient.IScoreInfo;\n    public status: number;\n    public socket: Socket;\n\n    private watchdogInterval: number;\n    private connTest?: Timer;\n    private callbackQueues: Map<string, DataCallback[]>;\n    private messageBuffer: string;\n\n    constructor(opts?: FLLScoreClient.IClientOpts) {\n        if (opts !== undefined) {\n            this.opts = Client.defaults(opts, this.opts);\n        }\n\n        this.lastUpdate = undefined;\n        this.scoreInfo = undefined;\n        this.status = FLLScoreClientConstants.ConnectionStatus.Disconnected;\n        this.socket = new Socket();\n        this.connTest = undefined;\n        this.watchdogInterval = 5;\n\n        this.callbackQueues = new Map<string, DataCallback[]>();\n        this.callbackQueues.set('welcome', []);\n        this.callbackQueues.set('echo', []);\n        this.callbackQueues.set('lastUpdate', []);\n        this.callbackQueues.set('scoreHeader', []);\n        this.callbackQueues.set('score', []);\n        this.callbackQueues.set('scoreDone', []);\n\n        this.socket.on('close', () => {\n            this.status = FLLScoreClientConstants.ConnectionStatus.Disconnected;\n            if (this.connTest !== undefined) {\n                clearInterval(this.connTest);\n            }\n            this.connTest = undefined;\n            this.watchdogInterval = 5;\n        });\n\n        this. messageBuffer = '';\n        this.socket.on('data', (data) => {\n            let message = data.toString();\n\n            // Check for incomplete message, push that onto the buffer and process the rest (if there are any)\n            if (!message.endsWith('\\r\\n')) {\n                const lastLine = message.lastIndexOf('\\r\\n');\n\n                if (lastLine === -1) {\n                    // did not find last line, push entire message and wait for more\n                    this.messageBuffer += message;\n                    return;\n                } else {\n                    // 1. capture incomplete line,\n                    // 2. set message to be the buffer + all complete lines,\n                    // 3. set the buffer to the incomplete line.\n                    const incompleteLine = message.substring(lastLine + 2);\n                    message = this.messageBuffer + message.substring(0, lastLine + 2);\n                    this.messageBuffer = incompleteLine;\n                }\n            } else {\n                message = this.messageBuffer + message;\n            }\n\n            // Nothing to process, return\n            if (message.length === 0) {\n                return;\n            }\n\n            // Split message into valid commands\n            const split = message.trim().split('\\r\\n');\n\n            // Process each command\n\n            const regexMap: Map<string, RegExp> = new Map<string, RegExp>([\n                ['welcome', FLLScoreClientConstants.WELCOME],\n                ['echo', FLLScoreClientConstants.ECHO],\n                ['lastUpdate', FLLScoreClientConstants.LAST_UPDATE],\n                ['scoreHeader', FLLScoreClientConstants.SCORE_HEADER],\n                ['score', FLLScoreClientConstants.SCORE],\n                ['scoreDone', FLLScoreClientConstants.SCORE_DONE],\n            ]);\n\n            split.forEach((line) => {\n                let processed = false;\n                regexMap.forEach((val, key) => {\n                    if (processed) {\n                        return;\n                    }\n\n                    if (val.test(line)) {\n                        processed = true;\n                        const arr = this.callbackQueues.get(key);\n                        if (arr !== undefined) {\n                            const cb = arr.shift();\n                            if (cb !== undefined) {\n                                cb(line);\n                            }\n                        }\n                    }\n                });\n\n                if (!processed) {\n                    // console.log('WARNING: Line: ' + line + ' was not processed');\n                }\n            });\n        });\n    }\n\n    public connect(): Promise<string> {\n        this.status = FLLScoreClientConstants.ConnectionStatus.Connecting;\n\n        return new Promise<string>((resolve, reject) => {\n\n            const to = setTimeout(() => {\n                this.socket.removeListener('error', errorListener);\n                this.removeCallback('welcome', cb);\n                this.socket.emit('close', true);\n                reject(new Error('timeout'));\n            }, 50);\n\n            const cb = (data: string) => {\n                const raw = data.trim();\n                this.watchdogInterval = parseInt(raw.substring(raw.indexOf(':') + 1), 10);\n                this.resetConnectionTest();\n                this.socket.removeListener('error', errorListener);\n                clearTimeout(to);\n                resolve('Connected');\n            };\n\n            const errorListener = (err: Error) => {\n                this.removeCallback('welcome', cb);\n                clearTimeout(to);\n                reject(err);\n            };\n\n            this.socket.once('error', errorListener);\n\n            this.socket.connect({\n                host: this.opts.host!,\n                port: this.opts.port!,\n            }, () => {\n                this.status = FLLScoreClientConstants.ConnectionStatus.Connected;\n\n                this.pushCallback('welcome', cb);\n                this.socket.write('FLLScore:' + this.opts.name + '|Primary\\r\\n');\n            });\n        });\n    }\n\n    public sendPing(): Promise<string> {\n        return new Promise<string>((resolve, reject) => {\n            if (this.status !== FLLScoreClientConstants.ConnectionStatus.Connected) {\n                reject(new Error('Not Connected'));\n            }\n\n            const to = setTimeout(() => {\n                this.socket.removeListener('error', errorListener);\n                this.removeCallback('echo', cb);\n                reject(new Error('timeout'));\n            }, 50);\n\n            const cb = () => {\n                this.socket.removeListener('error', errorListener);\n                clearTimeout(to);\n                resolve('Echo Received');\n            };\n\n            const errorListener = (err: Error) => {\n                this.removeCallback('echo', cb);\n                clearTimeout(to);\n                reject(err);\n            };\n\n            this.socket.once('error', errorListener);\n\n            this.pushCallback('echo', cb);\n\n            this.socket.write('Ping:\\r\\n', () => {\n                this.resetConnectionTest();\n            });\n        });\n    }\n\n    public sendLastUpdate(): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            if (this.status !== FLLScoreClientConstants.ConnectionStatus.Connected) {\n                reject(new Error('Not Connected'));\n            }\n\n            const to = setTimeout(() => {\n                this.socket.removeListener('error', errorListener);\n                this.removeCallback('lastUpdate', cb);\n                reject(new Error('timeout'));\n            }, 50);\n\n            const cb = (data: string) => {\n                if (FLLScoreClientConstants.LAST_UPDATE.test(data.toString())) {\n                    const raw = data.toString().trim();\n                    const response = raw.substring(raw.indexOf(':') + 1);\n                    const newDate = new Date(response);\n                    this.socket.removeListener('error', errorListener);\n                    clearTimeout(to);\n                    if (this.lastUpdate === undefined || newDate.getTime() > this.lastUpdate.getTime()) {\n                        this.lastUpdate = newDate;\n                        resolve(true);\n                    } else {\n                        resolve(false);\n                    }\n                } else {\n                    this.socket.removeListener('error', errorListener);\n                    clearTimeout(to);\n                    reject(new Error('Unexpected Message returned: ' + data));\n                }\n            };\n\n            const errorListener = (err: Error) => {\n                this.removeCallback('lastUpdate', cb);\n                clearTimeout(to);\n                reject(err);\n            };\n\n            this.socket.once('error', errorListener);\n\n            this.pushCallback('lastUpdate', cb);\n\n            this.socket.write('Send Last Update:\\r\\n', () => {\n                this.resetConnectionTest();\n            });\n        });\n    }\n\n    public sendScore(): Promise<FLLScoreClient.IScoreInfo> {\n        return new Promise<FLLScoreClient.IScoreInfo>((resolve, reject) => {\n\n            let scheduleInfo: FLLScoreClient.IScheduleInfo;\n            const teamInfo: FLLScoreClient.ITeamInfo[] = [];\n\n            const errorListener = (err: Error) => {\n                reject(err);\n            };\n\n            const scoreDoneCallback = () => {\n                const teamDiff = scheduleInfo.numberOfTeams - teamInfo.length;\n                if (teamDiff > 0) {\n                    // console.log('WARNING: only received ' +\n                    //     teamInfo.length + '/' + scheduleInfo.numberOfTeams + ' teams!');\n                    const arr = this.callbackQueues.get('score');\n                    if (arr !== undefined) {\n                        arr.splice(0, teamDiff);\n                    }\n                }\n                this.scoreInfo = { scheduleInfo, teamInfo };\n                this.socket.removeListener('error', errorListener);\n                resolve(this.scoreInfo);\n            };\n\n            const scoreCallback = (value: string) => {\n                const content = value.substring(value.indexOf(':') + 1).split('|');\n                teamInfo.push({\n                    highScore: parseInt(content[2], 10),\n                    name: content[1],\n                    number: parseInt(content[0], 10),\n                    scores: [\n                        parseInt(content[3], 10),\n                        parseInt(content[4], 10),\n                        parseInt(content[5], 10),\n                    ],\n                });\n            };\n\n            const scoreHeaderCallback = (value: string) => {\n                const content = value.substring(value.indexOf(':') + 1).split('|');\n                scheduleInfo = {\n                    lastUpdate: new Date(content[0]),\n                    numberOfCompletedMatches: parseInt(content[3], 10),\n                    numberOfMatches: parseInt(content[2], 10),\n                    numberOfTeams: parseInt(content[1], 10),\n                };\n\n                for (let i = 0; i < scheduleInfo.numberOfTeams; i++) {\n                    this.pushCallback('score', scoreCallback);\n                }\n            };\n\n            if (this.status !== FLLScoreClientConstants.ConnectionStatus.Connected) {\n                this.socket.removeListener('error', errorListener);\n                reject(new Error('Not Connected'));\n            }\n\n            this.socket.once('error', errorListener);\n\n            this.pushCallback('scoreHeader', scoreHeaderCallback);\n            this.pushCallback('scoreDone', scoreDoneCallback);\n\n            this.socket.write('Send Score:\\r\\n', () => {\n                this.resetConnectionTest();\n            });\n        });\n    }\n\n    public close(): Promise<string> {\n        return new Promise<string>((resolve, reject) => {\n            if (this.status !== FLLScoreClientConstants.ConnectionStatus.Connected) {\n                resolve('Connection Closed');\n            }\n\n            const errorListener = (err: Error) => {\n                reject(err);\n            };\n\n            this.socket.once('error', errorListener);\n\n            this.socket.once('close', (hadError) => {\n                if (hadError) {\n                    this.socket.removeListener('error', errorListener);\n                    reject(new Error('Closed with error'));\n                } else {\n                    this.socket.removeListener('error', errorListener);\n                    resolve('Connection Closed');\n                }\n            });\n\n            this.socket.end();\n        });\n    }\n\n    private pushCallback(key: string, cb: DataCallback): void {\n        const arr = this.callbackQueues.get(key);\n        if (arr !== undefined) {\n            arr.push(cb);\n        }\n    }\n\n    private removeCallback(key: string, cb: DataCallback): void {\n        const arr = this.callbackQueues.get(key);\n        if (arr !== undefined) {\n            const index = arr.indexOf(cb, 0);\n            if (index > -1) {\n                arr.splice(index, 1);\n            }\n        }\n    }\n\n    private resetConnectionTest(): void {\n        if (this.connTest !== undefined) {\n            clearInterval(this.connTest);\n        }\n\n        if (!this.opts.useWatchdog) {\n            return;\n        }\n\n        this.connTest = setInterval(() => {\n            if (this.status === FLLScoreClientConstants.ConnectionStatus.Connected) {\n                this.socket.write('Ping:\\r\\n');\n            }\n        }, this.watchdogInterval * 1000);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/proxy/client.ts","module.exports = require(\"net\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"net\"\n// module id = 3\n// module chunks = 0","import * as ConnectionStatus from './connectionStatus';\n\nexport * from './regexConstants';\nexport {ConnectionStatus};\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/constants/index.ts","export const Disconnected = 0;\nexport const Connecting = 1;\nexport const Connected = 2;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/constants/connectionStatus.ts","export const WELCOME = /^Welcome:[0-9]+(\\r\\n)*$/;\nexport const ECHO = /^Echo:(\\r\\n)*$/;\nexport const SCORE_HEADER = /^Score Header:[a-zA-Z0-9\\/: ]+(\\|[0-9]+){3}(\\r\\n)*$/;\nexport const SCORE = /^Score:[0-9]+\\|.+(\\|(-1|[0-9]+)){4}(\\r\\n)*$/;\nexport const SCORE_DONE = /^Score Done:(\\r\\n)*$/;\nexport const LAST_UPDATE = /^Last Update:.+(\\r\\n)*$/;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/constants/regexConstants.ts","import * as io from 'socket.io';\nimport {FLLScoreClient} from '../shared/interface';\nimport {createClient} from './index';\n\nexport class WebProxy implements FLLScoreClient.IWebProxy {\n    private static defaults(src: FLLScoreClient.IWebProxyOpts,\n                            def: FLLScoreClient.IWebProxyOpts): FLLScoreClient.IWebProxyOpts {\n        const val = def;\n        if (src.infoPollingRate !== undefined) {\n            val.infoPollingRate = src.infoPollingRate;\n        }\n        if (src.socket !== undefined) {\n            val.socket = src.socket;\n            val.socketOpts = src.socket.opts;\n        } else if (src.socketOpts !== undefined) {\n            const valOpts = def.socketOpts!;\n            if (src.socketOpts.host !== undefined) {\n                valOpts.host = src.socketOpts.host;\n            }\n            if (src.socketOpts.name !== undefined) {\n                valOpts.name = src.socketOpts.name;\n            }\n            if (src.socketOpts.port !== undefined) {\n                valOpts.port = src.socketOpts.port;\n            }\n            if (src.socketOpts.useWatchdog !== undefined) {\n                valOpts.useWatchdog = src.socketOpts.useWatchdog;\n            }\n            val.socketOpts = valOpts;\n        }\n        if (src.servePort !== undefined) {\n            val.servePort = src.servePort;\n        }\n        if (val.servePort === val.socketOpts!.port) {\n            val.servePort = val.socketOpts!.port! + 1;\n        }\n        if (src.socketIO !== undefined) {\n            val.socketIO = src.socketIO;\n        }\n\n        return val;\n    }\n\n    public readonly infoPollingRate: number;\n    public readonly servePort: number;\n    public readonly socketOpts: FLLScoreClient.IClientOpts;\n    public server: SocketIO.Server;\n\n    private clients: SocketIO.Socket[];\n    private opts: FLLScoreClient.IWebProxyOpts = {\n        infoPollingRate: 30,\n        servePort: 25003,\n        socketOpts: {\n            host: 'localhost',\n            name: 'FLLScoreClient',\n            port: 25002,\n            useWatchdog: true,\n        },\n    };\n    private fllclient: FLLScoreClient.IClient;\n    private pollTest?: NodeJS.Timer;\n\n    constructor(opts?: FLLScoreClient.IWebProxyOpts) {\n        if (opts !== undefined) {\n            this.opts = WebProxy.defaults(opts, this.opts);\n        }\n\n        this.clients = [];\n        this.fllclient = this.opts!.socket!;\n        this.infoPollingRate = this.opts!.infoPollingRate!;\n        this.servePort = this.opts!.servePort!;\n        this.socketOpts = this.opts!.socketOpts!;\n\n        if (this.fllclient === undefined) {\n            this.fllclient = createClient(this.socketOpts);\n        }\n\n        if (this.server === undefined) {\n            this.server = io();\n        }\n    }\n\n    public startProxy(): Promise<boolean> {\n        return new Promise<boolean>((resolve) => {\n            this.fllclient.connect().then(() => {\n                this.fllclient.socket.on('data', (data) => {\n                    console.log('Received:\\n\\t' + data.toString().trim());\n                });\n\n                this.pollTest = setInterval(() => {\n                    this.fllclient.sendLastUpdate().then((updated: boolean) => {\n                        if (updated) {\n                            return this.fllclient.sendScore();\n                        } else {\n                            return Promise.resolve(undefined);\n                        }\n                    }).then((info?: FLLScoreClient.IScoreInfo) => {\n                        if (info !== undefined) {\n                            this.server.emit('lastUpdate', this.fllclient.lastUpdate);\n                            this.server.emit('scoreInfo', info);\n                        }\n                    }).catch((err: Error) => {\n                        // TODO: Deal with error\n                        console.log(err);\n                    });\n                }, this.infoPollingRate * 1000);\n\n                this.setupClientListener();\n\n                this.server.listen(this.servePort);\n                resolve(true);\n            }).catch(() => {\n                resolve(false);\n            });\n        });\n    }\n\n    public stopProxy(): Promise<string> {\n        if (this.pollTest !== undefined) {\n            clearInterval(this.pollTest);\n        }\n        this.closeConnections();\n        return this.fllclient.close();\n    }\n\n    private closeConnections() {\n        this.clients.forEach((client: SocketIO.Socket) => {\n            client.disconnect(true);\n        });\n        this.clients = [];\n    }\n\n    private setupClientListener() {\n        this.server.on('connection', (client: SocketIO.Socket) => {\n            this.clients.push(client);\n            if (this.fllclient.lastUpdate !== undefined) {\n                client.emit('lastUpdate', this.fllclient.lastUpdate.toISOString());\n            }\n\n            if (this.fllclient.scoreInfo !== undefined) {\n                client.emit('scoreInfo', this.fllclient.scoreInfo);\n            }\n\n            client.on('sendLastUpdate', (m, cb) => {\n                if (m === 'please') {\n                    if (this.fllclient.lastUpdate !== undefined) {\n                        cb(this.fllclient.lastUpdate.toISOString());\n                    } else {\n                        this.fllclient.sendLastUpdate().then(() => {\n                            client.emit('lastUpdate', this.fllclient.lastUpdate!.toISOString());\n                            cb(this.fllclient.lastUpdate!.toISOString());\n                        }).catch((err: Error) => {\n                            // TODO: Deal with this error\n                            console.log(err);\n                        });\n                    }\n                } else {\n                    cb(new Error('invalid command'));\n                }\n            });\n\n            client.on('sendScoreInfo', (m, cb?) => {\n                if (m === 'please') {\n                    if (this.fllclient.scoreInfo !== undefined) {\n                        cb(this.fllclient.scoreInfo);\n                    } else {\n                        this.fllclient.sendScore().then((scoreInfo: FLLScoreClient.IScoreInfo) => {\n                            client.emit('scoreInfo', scoreInfo);\n                            cb(scoreInfo);\n                        }).catch((err: Error) => {\n                            // TODO: Deal with this error\n                            console.log(err);\n                        });\n                    }\n                } else {\n                    cb(new Error('invalid command'));\n                }\n            });\n\n            client.on('close', () => {\n                this.clients.splice(this.clients.indexOf(client), 1);\n            });\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/proxy/webProxy.ts","module.exports = require(\"socket.io\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"socket.io\"\n// module id = 8\n// module chunks = 0"],"sourceRoot":""}